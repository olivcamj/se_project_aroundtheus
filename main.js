(()=>{"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}var t={inputSelector:".form__item",submitButtonSelector:".form__btn",inactiveButtonClass:"form__btn_disabled",inputErrorClass:"form__item_type_error",errorClass:"form__error"},r=document.querySelector(".modal_type_editProfile"),n=document.querySelector(".modal_type_addCard"),o=document.querySelector(".modal_type_imgPopup"),i=document.querySelector(".modal_type_deleteCard"),a=document.querySelector(".modal_type_setAvatar"),c=document.querySelector(".profile__editBtn"),u=document.querySelector(".profile__addBtn"),l=document.querySelector(".profile__avatar-overlay"),s=(n.querySelector(".modal__closeBtn"),document.querySelector(".form__item_el_name")),f=document.querySelector(".form__item_el_occupation"),d=(document.querySelector(".form__item_el_title"),document.querySelector(".form__item_el_url"),document.querySelector(".elements__container")),y=document.querySelector(".profile__avatar"),m=document.querySelector(".form__type_add"),p=document.querySelector(".form__type_edit");function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_(n.key),n)}}function _(e){var t=function(e){if("object"!=h(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==h(t)?t:t+""}const b=function(){return e=function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=r},(t=[{key:"_showErrorMessage",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}},{key:"_hideErrorMessage",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideErrorMessage(e):this._showErrorMessage(e)}},{key:"_toggleButtonState",value:function(e,t){e.every((function(e){return e.validity.valid}))?(t.classList.remove("".concat(this._inactiveButtonClass)),t.disabled=!1):(t.classList.add("".concat(this._inactiveButtonClass)),t.disabled=!0)}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),r=this._formElement.querySelector(this._submitButtonSelector);this._toggleButtonState(t,r),t.forEach((function(n){n.addEventListener("input",(function(){e._checkInputValidity(n),e._toggleButtonState(t,r)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&v(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function k(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,g(n.key),n)}}function g(e){var t=function(e){if("object"!=S(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==S(t)?t:t+""}const E=function(){return e=function e(t,r){var n=t.data,o=t.handleCardClick,i=t.handleDeleteClick,a=t.handleDeleteIcon,c=t.handleLikeCount,u=t.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n.name,this._link=n.link,this._id=n._id,this._likes=n.likes,this._cardTemplateSelector=r,this._handleCardClick=o,this._handleDeleteClick=i,this._handleDeleteIcon=a,this._handleLikeCount=c,this._handleLikeClick=u},(t=[{key:"_getCardTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"id",value:function(){return this._id}},{key:"_cardRemoveBtn",value:function(){return this._card.querySelector(".card__removeBtn")}},{key:"_cardLikeCount",value:function(){return this._card.querySelector(".card__likeCount")}},{key:"_cardHeartIcon",value:function(){return this._card.querySelector(".card__heart-icon")}},{key:"_cardImage",value:function(){return this._card.querySelector(".card__img")}},{key:"_addEventListeners",value:function(){var e=this;this._cardHeartIcon().addEventListener("click",(function(){e._handleLikeClick(e._id)})),this._cardRemoveBtn().addEventListener("click",(function(){e._handleDeleteClick(e.id())})),this._cardImage().addEventListener("click",(function(){e._handleCardClick({link:e._link,name:e._text})}))}},{key:"deleteCard",value:function(){this._card.remove(),this._card=null}},{key:"hideRemoveBtn",value:function(){this._cardRemoveBtn().classList.add("card__removeBtn_type_hidden")}},{key:"_likeCount",value:function(){void 0!==this._likes&&(this._cardLikeCount().textContent=this._likes.length)}},{key:"renderLike",value:function(){this._cardHeartIcon().classList.add("card__heart-icon_active")}},{key:"wasLiked",value:function(){return this._cardHeartIcon().classList.contains("card__heart-icon_active")}},{key:"like",value:function(e){this._cardHeartIcon().classList.add("card__heart-icon_active"),this._cardLikeCount().textContent=e}},{key:"deleteLike",value:function(e){this._cardHeartIcon().classList.remove("card__heart-icon_active"),this._cardLikeCount().textContent=e}},{key:"generateCard",value:function(){return this._card=this._getCardTemplate(),this._card.querySelector(".card__text").textContent=this._name,this._cardImage().style.backgroundImage="url(".concat(this._link,")"),this._likeCount(),this._addEventListeners(),this._handleDeleteIcon(),this._card}}])&&k(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function C(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,j(n.key),n)}}function j(e){var t=function(e){if("object"!=w(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==w(t)?t:t+""}var P=function(){return t=function e(t){var r=t.baseUrl,n=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=r,this._headers=n},r=[{key:"getUserData",value:function(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)})).then((function(t){return function(t){var r,n="7fb54333084f7cc9cdc452a8, 6c1c8237c69449d3ebececeb, e20d70478b06753655b60e0b, 9f87343e26d7981e15bb8b00, 4527bbdef69cc7b257c44c7c, f3d4b46ba9893107e34c7c73, 952bfd8345478adc99811136".split(", "),o=[],i=function(t,r){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,r){if(t){if("string"==typeof t)return e(t,r);var n={}.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?e(t,r):void 0}}(t))||r&&t&&"number"==typeof t.length){n&&(t=n);var o=0,i=function(){};return{s:i,n:function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,c=!0,u=!1;return{s:function(){n=n.call(t)},n:function(){var e=n.next();return c=e.done,e},e:function(e){u=!0,a=e},f:function(){try{c||null==n.return||n.return()}finally{if(u)throw a}}}}(t);try{for(i.s();!(r=i.n()).done;){var a=r.value;n.includes(a.owner._id)||o.push(a)}}catch(e){i.e(e)}finally{i.f()}return o}(t)}))}},{key:"getUserInfo",value:function(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)}))}},{key:"addCard",value:function(e){var t=e.link,r=e.name;return fetch(this._baseUrl+"/cards",{headers:this._headers,method:"POST",body:JSON.stringify({name:r,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error"+e.statusText)}))}},{key:"deleteCard",value:function(e){return fetch(this._baseUrl+"/cards/"+e,{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)}))}},{key:"editUserInfo",value:function(e){return fetch(this._baseUrl+"/users/me",{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e.name,about:e.title})}).then((function(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)}))}},{key:"changeLikeStatus",value:function(e,t){return t?fetch(this._baseUrl+"/cards/likes/"+e,{headers:this._headers,method:"PUT"}).then((function(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)})):fetch(this._baseUrl+"/cards/likes/"+e,{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject("Error!"+e.statusText)}))}},{key:"setUserAvatar",value:function(e){return fetch(this._baseUrl+"/users/me/avatar",{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((function(e){e.ok?e.json():Promise.reject("Error!"+e.statusText)}))}}],r&&C(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,r}();const L=P;function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,I(n.key),n)}}function I(e){var t=function(e){if("object"!=O(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==O(t)?t:t+""}const q=function(){return e=function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=n,this._renderer=o,this._container=r},(t=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&T(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function U(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,x(n.key),n)}}function x(e){var t=function(e){if("object"!=B(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=B(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==B(t)?t:t+""}const A=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=t,this._handleEscClose=this._handleEscClose.bind(this)},t=[{key:"open",value:function(){this._popupElement.classList.add("modal_visible"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_visible"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){27===e.which&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".modal__closeBtn").addEventListener("click",(function(){e.close()})),this._popupElement.addEventListener("click",(function(t){t.target.closest(".modal__content")||e.close()}))}}],t&&U(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function R(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,H(n.key),n)}}function H(e){var t=function(e){if("object"!=D(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:t+""}function V(e,t,r){return t=N(t),function(e,t){if(t&&("object"==D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,F()?Reflect.construct(t,r||[],N(e).constructor):t.apply(e,r))}function F(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(F=function(){return!!e})()}function M(){return M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},M.apply(null,arguments)}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}function J(e,t){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},J(e,t)}const $=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=V(this,t,[e]))._image=r._popupElement.querySelector(".modal__img"),r._caption=r._popupElement.querySelector(".modal__caption"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&J(e,t)}(t,e),r=t,n=[{key:"open",value:function(e){var r,n,o,i=e.link,a=e.name;this._image.src=i,this._image.alt=a,this._caption.textContent=a,(r=t,n=this,o=M(N(1&3?r.prototype:r),"open",n),function(e){return o.apply(n,e)})([])}}],n&&R(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(A);function z(e){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},z(e)}function G(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,K(n.key),n)}}function K(e){var t=function(e){if("object"!=z(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==z(t)?t:t+""}function Q(e,t,r){return t=Z(t),function(e,t){if(t&&("object"==z(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,W()?Reflect.construct(t,r||[],Z(e).constructor):t.apply(e,r))}function W(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(W=function(){return!!e})()}function X(e,t,r,n){var o=Y(Z(1&n?e.prototype:e),t,r);return 2&n?function(e){return o.apply(r,e)}:o}function Y(){return Y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=Z(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},Y.apply(null,arguments)}function Z(e){return Z=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Z(e)}function ee(e,t){return ee=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ee(e,t)}const te=function(e){function t(e){var r,n=e.handleSubmitForm,o=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=Q(this,t,[o]))._handleSubmitForm=n,r._form=r._popupElement.querySelector(".form"),r._popupElement=o,r._inputList=r._popupElement.querySelectorAll(".form__item"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ee(e,t)}(t,e),r=t,n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValues={},this._inputList.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setDeleteHandler",value:function(e){this._handleSubmitForm=e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm(e._getInputValues())})),X(t,"setEventListeners",this,3)([])}},{key:"close",value:function(){this._form.reset(),X(t,"close",this,3)([])}}],n&&G(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(A);function re(e){return re="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},re(e)}function ne(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,oe(n.key),n)}}function oe(e){var t=function(e){if("object"!=re(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=re(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==re(t)?t:t+""}const ie=function(){return e=function e(t){var r=t.nameSelector,n=t.titleSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(r),this._userTitle=document.querySelector(n)},(t=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,title:this._userTitle.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,r=e.title;this._userName.textContent=t,this._userTitle.textContent=r}}])&&ne(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function ae(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}var ce=new $(o);ce.setEventListeners();var ue=new te({handleSubmitForm:function(){},popupSelector:i});ue.setEventListeners();var le=new L({baseUrl:"https://around.nomoreparties.co/v1/group-4",headers:{authorization:"072f7e25-49ec-4ac7-aa51-bf0613ff728e","Content-Type":"application/json"}});le.getUserData().then((function(e){var o,i,h=(i=2,function(e){if(Array.isArray(e))return e}(o=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,c=[],u=!0,l=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(c.push(n.value),c.length!==t);u=!0);}catch(e){l=!0,o=e}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(o,i)||function(e,t){if(e){if("string"==typeof e)return ae(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ae(e,t):void 0}}(o,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),v=h[0],_=h[1],S=v._id,k=new q({items:_,renderer:function(e){var t=j(e);k.addItem(t.generateCard())}},d);k.renderItems();var g=new te({handleSubmitForm:function(e){w(!0,n),le.addCard(e).then((function(e){var t=j(e);w(!1,n),k.addItem(t.generateCard()),g.close()})).catch((function(e){return console.trace(e),new Error({err:e})}))},popupSelector:n});function w(e,t){t.querySelector(".form__btn").textContent=e?"Saving...":"Save"}g.setEventListeners(),u.addEventListener("click",(function(){g.open()}));var C=new te({handleSubmitForm:function(e){w(!0,a),le.setUserAvatar(e.link).then((function(){y.src=e.link,w(!1,a),C.close()})).catch((function(e){return console.log(e)}))},popupSelector:a});function j(e){var t=new E({data:e,handleCardClick:function(){ce.open(e)},handleDeleteClick:function(e){ue.setDeleteHandler((function(){le.deleteCard(e).then((function(){t.deleteCard(),ue.close()})).catch((function(e){return console.log(e)}))})),ue.open()},handleDeleteIcon:function(){S!==e.owner._id&&t.hideRemoveBtn()},handleLikeCount:function(){e.likes.length>0&&e.likes.forEach((function(e){e._id===S&&t.renderLike()}))},handleLikeClick:function(e){!1===t.wasLiked()?le.changeLikeStatus(e,!0).then((function(e){var r=e.likes.length;t.like(r)})).catch((function(e){return console.log(e)})):le.changeLikeStatus(e,!1).then((function(e){var r=e.likes.length;t.deleteLike(r)})).catch((function(e){return console.log(e)}))}},".card-template");return t}C.setEventListeners(),l.addEventListener("click",(function(){C.open()}));var P=new ie({nameSelector:".profile__heading",titleSelector:".profile__occupation"});P.setUserInfo({name:v.name,title:v.about}),y.src=v.avatar;var L=new te({handleSubmitForm:function(e){w(!0,r),le.editUserInfo(e).then((function(){P.setUserInfo(e),w(!1,r),L.close()})).catch((function(e){return console.log(e)}))},popupSelector:r});L.setEventListeners();var O=new b(t,p),T=new b(t,m);O.enableValidation(),T.enableValidation(),c.addEventListener("click",(function(){var e=P.getUserInfo();s.value=e.name,f.value=e.title,L.open()}))})).catch((function(e){return console.error(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,